CCS PCH C Compiler, Version 4.140, 31805               10-fev-14 16:05

               Filename:   D:\Eletronica\Projetos\BLDC\main.lst

               ROM used:   736 bytes (2%)
                           Largest free fragment is 32028
               RAM used:   33 (2%) at main() level
                           42 (3%) worst case
               Stack:     3 worst case (2 in main + 1 for interrupts)

*
0000:  GOTO   01E6
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  FF2.4
0056:  GOTO   0060
005A:  BTFSC  FF2.1
005C:  GOTO   00AE
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVFF  15,FF5
009A:  MOVFF  16,FF6
009E:  MOVFF  17,FF7
00A2:  MOVF   04,W
00A4:  MOVFF  06,FE0
00A8:  MOVFF  05,FD8
00AC:  RETFIE 0
.................... /* 
....................  * main.c 
....................  * 
....................  *  Created on: 03/02/2014 
....................  *      Author: cuki 
....................  */ 
.................... #include<18F45K20.h> 
.................... //////// Standard Header file for the PIC18F45K20 device //////////////// 
.................... #device PIC18F45K20 
.................... #list 
....................  
....................  
.................... #fuses H4 
....................  
.................... #use delay(crystal=15MHz, clock=60MHz) 
01C6:  MOVLW  01
01C8:  SUBWF  21,F
01CA:  BNC   01E4
01CC:  CLRF   FEA
01CE:  MOVLW  21
01D0:  MOVWF  FE9
01D2:  MOVF   FEF,W
01D4:  BZ    01E4
01D6:  MOVLW  03
01D8:  MOVWF  00
01DA:  DECFSZ 00,F
01DC:  BRA    01DA
01DE:  BRA    01E0
01E0:  DECFSZ FEF,F
01E2:  BRA    01D6
01E4:  RETURN 0
.................... #use rs232(xmit=PIN_C6, baud=9600) 
*
00CC:  BCF    F94.6
00CE:  BCF    F8B.6
00D0:  MOVLW  08
00D2:  MOVWF  01
00D4:  BRA    00D6
00D6:  NOP   
00D8:  BSF    01.7
00DA:  BRA    00F8
00DC:  BCF    01.7
00DE:  RRCF   29,F
00E0:  BTFSC  FD8.0
00E2:  BSF    F8B.6
00E4:  BTFSS  FD8.0
00E6:  BCF    F8B.6
00E8:  BSF    01.6
00EA:  BRA    00F8
00EC:  BCF    01.6
00EE:  DECFSZ 01,F
00F0:  BRA    00DE
00F2:  BRA    00F4
00F4:  NOP   
00F6:  BSF    F8B.6
00F8:  MOVLW  02
00FA:  MOVWF  00
00FC:  CLRF   FE9
00FE:  DECFSZ FE9,F
0100:  BRA    00FE
0102:  DECFSZ 00,F
0104:  BRA    00FC
0106:  BRA    0108
0108:  BTFSC  01.7
010A:  BRA    00DC
010C:  BTFSC  01.6
010E:  BRA    00EC
0110:  RETURN 0
....................  
.................... int cont = 1; 
.................... int cont2 = 0; 
.................... long tempo = 35000; 
.................... long tempoAux = 0; 
.................... short ctrl = FALSE; 
.................... short trigger = FALSE; 
....................  
.................... #INT_EXT 
.................... void isr_ext() { 
.................... 	clear_interrupt(INT_EXT); 
*
00AE:  BCF    FF2.1
.................... 	tempo -= 1000; 
00B0:  MOVLW  E8
00B2:  SUBWF  1B,F
00B4:  MOVLW  03
00B6:  SUBWFB 1C,F
.................... 	if (!tempo) 
00B8:  MOVF   1B,W
00BA:  IORWF  1C,W
00BC:  BNZ   00C6
.................... 		tempo = 65000; 
00BE:  MOVLW  FD
00C0:  MOVWF  1C
00C2:  MOVLW  E8
00C4:  MOVWF  1B
.................... } 
....................  
00C6:  BCF    FF2.1
00C8:  GOTO   0060
.................... int main(void) { 
*
01E6:  CLRF   FF8
01E8:  BCF    FD0.7
01EA:  BSF    07.7
01EC:  CLRF   FEA
01EE:  CLRF   FE9
01F0:  BCF    F94.6
01F2:  BSF    F8B.6
01F4:  MOVLW  01
01F6:  MOVWF  19
01F8:  CLRF   1A
01FA:  MOVLW  88
01FC:  MOVWF  1C
01FE:  MOVLW  B8
0200:  MOVWF  1B
0202:  CLRF   1E
0204:  CLRF   1D
0206:  BCF    1F.0
0208:  BCF    1F.1
020A:  MOVLW  00
020C:  MOVWF  F7E
020E:  BCF    FC1.4
0210:  BCF    FC1.5
0212:  MOVF   F7F,W
0214:  ANDLW  E0
0216:  MOVWF  F7F
0218:  BCF    F79.5
021A:  BCF    F79.4
021C:  CLRF   F7A
021E:  CLRF   F7B
....................  
.................... 	clear_interrupt(INT_EXT); 
0220:  BCF    FF2.1
.................... 	enable_interrupts(INT_EXT); 
0222:  BSF    FF2.4
.................... 	enable_interrupts(GLOBAL); 
0224:  MOVLW  C0
0226:  IORWF  FF2,F
....................  
.................... 	setup_ccp1(CCP_PWM); 
0228:  BCF    F94.2
022A:  BCF    F8B.2
022C:  MOVLW  0C
022E:  MOVWF  FBD
0230:  CLRF   FB7
0232:  CLRF   FB6
0234:  MOVLW  01
0236:  MOVWF  FB9
.................... 	setup_timer_2(T2_DIV_BY_1, 250, 1); 
0238:  MOVLW  00
023A:  IORLW  04
023C:  MOVWF  FCA
023E:  MOVLW  FA
0240:  MOVWF  FCB
.................... 	set_pwm1_duty(127); 
0242:  MOVLW  7F
0244:  MOVWF  FBE
....................  
.................... 	while (TRUE) { 
.................... 		cont <<= 1; 
0246:  BCF    FD8.0
0248:  RLCF   19,F
.................... 		if (cont == 8) 
024A:  MOVF   19,W
024C:  SUBLW  08
024E:  BNZ   0254
.................... 			cont = 1; 
0250:  MOVLW  01
0252:  MOVWF  19
.................... 		output_d(cont); 
0254:  CLRF   F95
0256:  MOVFF  19,F8C
.................... 		if (tempo != 20000) { 
025A:  MOVF   1B,W
025C:  SUBLW  20
025E:  BNZ   0266
0260:  MOVF   1C,W
0262:  SUBLW  4E
0264:  BZ    029C
.................... 			if (!input(PIN_B1) && ctrl) { 
0266:  BSF    F93.1
0268:  BTFSC  F81.1
026A:  BRA    0296
026C:  BTFSS  1F.0
026E:  BRA    0296
.................... 				ctrl = FALSE; 
0270:  BCF    1F.0
.................... 				if (tempo > 30000) 
0272:  MOVF   1C,W
0274:  SUBLW  74
0276:  BC    028C
0278:  XORLW  FF
027A:  BNZ   0282
027C:  MOVF   1B,W
027E:  SUBLW  30
0280:  BC    028C
.................... 					tempo -= 1000; 
0282:  MOVLW  E8
0284:  SUBWF  1B,F
0286:  MOVLW  03
0288:  SUBWFB 1C,F
.................... 				else 
028A:  BRA    0294
.................... 					tempo -= 100; 
028C:  MOVLW  64
028E:  SUBWF  1B,F
0290:  MOVLW  00
0292:  SUBWFB 1C,F
.................... 			} else if (!ctrl) 
0294:  BRA    029C
0296:  BTFSC  1F.0
0298:  BRA    029C
.................... 				ctrl = TRUE; 
029A:  BSF    1F.0
.................... 		} 
.................... 		if (tempoAux != tempo) { 
029C:  MOVF   1B,W
029E:  SUBWF  1D,W
02A0:  BNZ   02A8
02A2:  MOVF   1C,W
02A4:  SUBWF  1E,W
02A6:  BZ    02C4
.................... 			tempoAux = tempo; 
02A8:  MOVFF  1C,1E
02AC:  MOVFF  1B,1D
.................... 			printf("\f%lu", tempo); 
02B0:  MOVLW  0C
02B2:  MOVWF  29
02B4:  RCALL  00CC
02B6:  MOVLW  10
02B8:  MOVWF  FE9
02BA:  MOVFF  1C,21
02BE:  MOVFF  1B,20
02C2:  BRA    0112
.................... 		} 
.................... 		delay_us(tempo); 
02C4:  MOVFF  1C,20
02C8:  INCF   20,F
02CA:  DECF   20,F
02CC:  BTFSC  FD8.2
02CE:  BRA    02D6
02D0:  SETF   21
02D2:  RCALL  01C6
02D4:  BRA    02CA
02D6:  MOVFF  1B,21
02DA:  RCALL  01C6
.................... 	} 
02DC:  BRA    0246
....................  
.................... 	return 0; 
02DE:  MOVLW  00
02E0:  MOVWF  01
.................... } 
....................  
02E2:  SLEEP 

Configuration Fuses:
   Word  1: C600   H4 FCMEN IESO
   Word  2: 1E1E   PUT BROWNOUT BORV18 NOWDT WDT32768
   Word  3: 8F00   CCP2C1 PBADEN LPT1OSC HFOFST MCLR
   Word  4: 0081   STVREN NOLVP NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB

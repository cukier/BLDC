CCS PCH C Compiler, Version 4.140, 31805               05-fev-14 16:50

               Filename:   D:\Eletronica\Projetos\BLDC\main.lst

               ROM used:   296 bytes (1%)
                           Largest free fragment is 32468
               RAM used:   30 (2%) at main() level
                           31 (2%) worst case
               Stack:     1 worst case (0 in main + 1 for interrupts)

*
0000:  GOTO   00DC
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  FF2.4
0056:  GOTO   0060
005A:  BTFSC  FF2.1
005C:  GOTO   00AE
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVFF  15,FF5
009A:  MOVFF  16,FF6
009E:  MOVFF  17,FF7
00A2:  MOVF   04,W
00A4:  MOVFF  06,FE0
00A8:  MOVFF  05,FD8
00AC:  RETFIE 0
.................... /* 
....................  * main.c 
....................  * 
....................  *  Created on: 03/02/2014 
....................  *      Author: cuki 
....................  */ 
.................... #include<18F45K20.h> 
.................... //////// Standard Header file for the PIC18F45K20 device //////////////// 
.................... #device PIC18F45K20 
.................... #list 
....................  
....................  
.................... #fuses HS 
....................  
.................... #use delay(clock=15MHz) 
.................... #use rs232(xmit=PIN_C6, baud=9600) 
....................  
.................... int cont = 1; 
.................... int cont2 = 0; 
.................... long tempo = 300; 
.................... short ctrl = FALSE; 
.................... short trigger = FALSE; 
....................  
.................... #INT_EXT 
.................... void isr_ext() { 
.................... 	clear_interrupt(INT_EXT); 
00AE:  BCF    FF2.1
.................... 	ctrl = TRUE; 
00B0:  BSF    1D.0
.................... 	cont <<= 1; 
00B2:  BCF    FD8.0
00B4:  RLCF   19,F
.................... 	if (cont == 8 | !cont) 
00B6:  MOVF   19,W
00B8:  SUBLW  08
00BA:  BZ    00C0
00BC:  MOVLW  00
00BE:  BRA    00C2
00C0:  MOVLW  01
00C2:  MOVWF  1E
00C4:  MOVF   19,F
00C6:  BZ    00CC
00C8:  MOVLW  00
00CA:  BRA    00CE
00CC:  MOVLW  01
00CE:  IORWF  1E,W
00D0:  BZ    00D6
.................... 		cont = 1; 
00D2:  MOVLW  01
00D4:  MOVWF  19
.................... } 
....................  
00D6:  BCF    FF2.1
00D8:  GOTO   0060
.................... int main(void) { 
00DC:  CLRF   FF8
00DE:  BCF    FD0.7
00E0:  BSF    07.7
00E2:  CLRF   FEA
00E4:  CLRF   FE9
00E6:  BCF    F94.6
00E8:  BSF    F8B.6
00EA:  MOVLW  01
00EC:  MOVWF  19
00EE:  CLRF   1A
00F0:  MOVWF  1C
00F2:  MOVLW  2C
00F4:  MOVWF  1B
00F6:  BCF    1D.0
00F8:  BCF    1D.1
00FA:  MOVLW  00
00FC:  MOVWF  F7E
00FE:  BCF    FC1.4
0100:  BCF    FC1.5
0102:  MOVF   F7F,W
0104:  ANDLW  E0
0106:  MOVWF  F7F
0108:  BCF    F79.5
010A:  BCF    F79.4
010C:  CLRF   F7A
010E:  CLRF   F7B
....................  
.................... 	clear_interrupt(INT_EXT); 
0110:  BCF    FF2.1
.................... 	enable_interrupts(INT_EXT); 
0112:  BSF    FF2.4
.................... 	enable_interrupts(GLOBAL); 
0114:  MOVLW  C0
0116:  IORWF  FF2,F
....................  
.................... 	while (TRUE) { 
.................... 		if (ctrl) { 
0118:  BTFSS  1D.0
011A:  BRA    0124
.................... 			ctrl = FALSE; 
011C:  BCF    1D.0
.................... 			output_d(cont); 
011E:  CLRF   F95
0120:  MOVFF  19,F8C
.................... 		} 
.................... 	} 
0124:  BRA    0118
.................... 	return 0; 
0126:  MOVLW  00
0128:  MOVWF  01
.................... } 
....................  
.................... //int cont = 1; 
.................... //int cont2 = 0; 
.................... //long tempo = 300; 
.................... //short ctrl = FALSE; 
.................... //short trigger = FALSE; 
.................... // 
.................... //#INT_EXT 
.................... //void isr_ext() { 
.................... //	clear_interrupt(INT_EXT); 
.................... //	tempo -= 10; 
.................... //	if (!tempo) 
.................... //		tempo = 300; 
.................... //} 
.................... // 
.................... //int main(void) { 
.................... // 
.................... //	clear_interrupt(INT_EXT); 
.................... //	enable_interrupts(INT_EXT); 
.................... //	enable_interrupts(GLOBAL); 
.................... // 
.................... //	while (TRUE) { 
.................... //		cont <<= 1; 
.................... //		if (cont == 8) 
.................... //			cont = 1; 
.................... //		output_d(cont); 
.................... //		delay_ms(tempo); 
.................... //	} 
.................... //	return 0; 
.................... //} 
....................  
012A:  SLEEP 

Configuration Fuses:
   Word  1: C200   HS FCMEN IESO
   Word  2: 1E1E   PUT BROWNOUT BORV18 NOWDT WDT32768
   Word  3: 8F00   CCP2C1 PBADEN LPT1OSC HFOFST MCLR
   Word  4: 0081   STVREN NOLVP NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB

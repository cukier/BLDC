CCS PCH C Compiler, Version 4.140, 31805               20-fev-14 14:18

               Filename:   D:\Eletronica\Projetos\BLDC\main.lst

               ROM used:   798 bytes (2%)
                           Largest free fragment is 31966
               RAM used:   31 (2%) at main() level
                           41 (3%) worst case
               Stack:     4 worst case (2 in main + 2 for interrupts)

*
0000:  GOTO   0284
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  FF2.4
0056:  GOTO   0060
005A:  BTFSC  FF2.1
005C:  GOTO   00D4
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVFF  15,FF5
009A:  MOVFF  16,FF6
009E:  MOVFF  17,FF7
00A2:  MOVF   04,W
00A4:  MOVFF  06,FE0
00A8:  MOVFF  05,FD8
00AC:  RETFIE 0
.................... /* 
....................  * main.c 
....................  * 
....................  *  Created on: 03/02/2014 
....................  *      Author: cuki 
....................  */ 
.................... #include<18F452.h> 
.................... //////// Standard Header file for the PIC18F452 device //////////////// 
.................... #device PIC18F452 
.................... #list 
....................  
....................  
.................... #fuses H4 
....................  
.................... #use delay(crystal=8MHz, clock=32MHz) 
*
00AE:  CLRF   FEA
00B0:  MOVLW  28
00B2:  MOVWF  FE9
00B4:  MOVF   FEF,W
00B6:  BZ    00D2
00B8:  MOVLW  0A
00BA:  MOVWF  01
00BC:  CLRF   00
00BE:  DECFSZ 00,F
00C0:  BRA    00BE
00C2:  DECFSZ 01,F
00C4:  BRA    00BC
00C6:  MOVLW  5F
00C8:  MOVWF  00
00CA:  DECFSZ 00,F
00CC:  BRA    00CA
00CE:  DECFSZ FEF,F
00D0:  BRA    00B8
00D2:  RETURN 0
.................... #use rs232(xmit=PIN_C6, baud=9600) 
*
0106:  BCF    F94.6
0108:  BCF    F8B.6
010A:  MOVLW  08
010C:  MOVWF  01
010E:  BRA    0110
0110:  NOP   
0112:  BSF    01.7
0114:  BRA    0132
0116:  BCF    01.7
0118:  RRCF   27,F
011A:  BTFSC  FD8.0
011C:  BSF    F8B.6
011E:  BTFSS  FD8.0
0120:  BCF    F8B.6
0122:  BSF    01.6
0124:  BRA    0132
0126:  BCF    01.6
0128:  DECFSZ 01,F
012A:  BRA    0118
012C:  BRA    012E
012E:  NOP   
0130:  BSF    F8B.6
0132:  MOVLW  01
0134:  MOVWF  00
0136:  CLRF   FE9
0138:  DECFSZ FE9,F
013A:  BRA    0138
013C:  DECFSZ 00,F
013E:  BRA    0136
0140:  MOVLW  0E
0142:  MOVWF  FE9
0144:  DECFSZ FE9,F
0146:  BRA    0144
0148:  NOP   
014A:  BTFSC  01.7
014C:  BRA    0116
014E:  BTFSC  01.6
0150:  BRA    0126
0152:  RETURN 0
....................  
.................... #define bto PIN_B0 
.................... #define A 33 
.................... #define B 17 
.................... #define C 20 
.................... #define D 12 
.................... #define E 10 
.................... #define F 34 
....................  
.................... long tempo = 500; 
.................... int cont = 0; 
.................... short ctrl = TRUE; 
....................  
.................... #INT_EXT 
.................... void ext_isr() { 
.................... 	delay_ms(100); 
*
00D4:  MOVLW  64
00D6:  MOVWF  28
00D8:  RCALL  00AE
.................... 	clear_interrupt(INT_EXT); 
00DA:  BCF    FF2.1
.................... 	tempo -= 50; 
00DC:  MOVLW  32
00DE:  SUBWF  1A,F
00E0:  MOVLW  00
00E2:  SUBWFB 1B,F
.................... 	if (tempo <= 50) 
00E4:  MOVF   1B,F
00E6:  BNZ   00F6
00E8:  MOVF   1A,W
00EA:  SUBLW  32
00EC:  BNC   00F6
.................... 		tempo = 500; 
00EE:  MOVLW  01
00F0:  MOVWF  1B
00F2:  MOVLW  F4
00F4:  MOVWF  1A
.................... 	ctrl = TRUE; 
00F6:  BSF    1D.0
.................... } 
....................  
00F8:  BCF    FF2.1
00FA:  GOTO   0060
.................... int muda_estado(int entrada) { 
.................... 	switch (entrada) { 
*
0176:  MOVLW  01
0178:  SUBWF  1E,W
017A:  ADDLW  FA
017C:  BC    01A6
017E:  ADDLW  06
0180:  GOTO   01AA
.................... 	case 1: 
.................... 		return A; 
0184:  MOVLW  21
0186:  MOVWF  01
0188:  BRA    01A6
.................... 	case 2: 
.................... 		return B; 
018A:  MOVLW  11
018C:  MOVWF  01
018E:  BRA    01A6
.................... 	case 3: 
.................... 		return C; 
0190:  MOVLW  14
0192:  MOVWF  01
0194:  BRA    01A6
.................... 	case 4: 
.................... 		return D; 
0196:  MOVLW  0C
0198:  MOVWF  01
019A:  BRA    01A6
.................... 	case 5: 
.................... 		return E; 
019C:  MOVLW  0A
019E:  MOVWF  01
01A0:  BRA    01A6
.................... 	case 6: 
.................... 		return F; 
01A2:  MOVLW  22
01A4:  MOVWF  01
.................... 	} 
.................... } 
01A6:  GOTO   02C2 (RETURN)
....................  
.................... int main(void) { 
*
0284:  CLRF   FF8
0286:  BCF    FD0.7
0288:  BSF    07.7
028A:  CLRF   FEA
028C:  CLRF   FE9
028E:  BCF    F94.6
0290:  BSF    F8B.6
0292:  MOVLW  01
0294:  MOVWF  1B
0296:  MOVLW  F4
0298:  MOVWF  1A
029A:  CLRF   1C
029C:  BSF    1D.0
029E:  BSF    FC1.0
02A0:  BSF    FC1.1
02A2:  BSF    FC1.2
02A4:  BCF    FC1.3
....................  
.................... 	output_c(0); 
02A6:  CLRF   F94
02A8:  CLRF   F8B
....................  
.................... 	enable_interrupts(INT_EXT_H2L | GLOBAL); 
02AA:  MOVLW  D0
02AC:  IORWF  FF2,F
02AE:  BCF    FF1.6
....................  
.................... 	printf("\fHello"); 
02B0:  MOVLW  FE
02B2:  MOVWF  FF6
02B4:  MOVLW  00
02B6:  MOVWF  FF7
02B8:  BRA    0154
....................  
.................... 	while (TRUE) { 
.................... 		output_c(muda_estado(++cont)); 
02BA:  INCF   1C,F
02BC:  MOVFF  1C,1E
02C0:  BRA    0176
02C2:  CLRF   F94
02C4:  MOVFF  01,F8B
.................... 		if (cont == 6) 
02C8:  MOVF   1C,W
02CA:  SUBLW  06
02CC:  BNZ   02D0
.................... 			cont = 0; 
02CE:  CLRF   1C
.................... 		delay_ms(tempo); 
02D0:  MOVFF  1B,1E
02D4:  INCF   1E,F
02D6:  DECF   1E,F
02D8:  BTFSC  FD8.2
02DA:  BRA    02EE
02DC:  CLRF   19
02DE:  BTFSC  FF2.7
02E0:  BSF    19.7
02E2:  BCF    FF2.7
02E4:  SETF   28
02E6:  RCALL  00AE
02E8:  BTFSC  19.7
02EA:  BSF    FF2.7
02EC:  BRA    02D6
02EE:  CLRF   19
02F0:  BTFSC  FF2.7
02F2:  BSF    19.7
02F4:  BCF    FF2.7
02F6:  MOVFF  1A,28
02FA:  RCALL  00AE
02FC:  BTFSC  19.7
02FE:  BSF    FF2.7
.................... 		if (ctrl) { 
0300:  BTFSS  1D.0
0302:  BRA    031A
.................... 			ctrl = FALSE; 
0304:  BCF    1D.0
.................... 			printf("\f%lu", tempo); 
0306:  MOVLW  0C
0308:  MOVWF  27
030A:  RCALL  0106
030C:  MOVLW  10
030E:  MOVWF  FE9
0310:  MOVFF  1B,1F
0314:  MOVFF  1A,1E
0318:  BRA    01D0
.................... 		} 
.................... 	} 
031A:  BRA    02BA
.................... 	return 0; 
031C:  MOVLW  00
031E:  MOVWF  01
.................... } 
0320:  SLEEP 

Configuration Fuses:
   Word  1: 2600   H4 NOOSCSEN
   Word  2: 0E0E   PUT BROWNOUT BORV20 NOWDT WDT128
   Word  3: 0100   CCP2C1
   Word  4: 0081   STVREN NOLVP NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB

CCS PCH C Compiler, Version 4.140, 31805               25-fev-14 15:25

               Filename:   D:\Eletronica\Projetos\BLDC\main.lst

               ROM used:   600 bytes (2%)
                           Largest free fragment is 32164
               RAM used:   29 (2%) at main() level
                           33 (2%) worst case
               Stack:     4 worst case (2 in main + 2 for interrupts)

*
0000:  GOTO   01D8
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  FF2.5
0056:  GOTO   0060
005A:  BTFSC  FF2.2
005C:  GOTO   013E
0060:  BTFSS  FF2.4
0062:  GOTO   006C
0066:  BTFSC  FF2.1
0068:  GOTO   00EC
006C:  BTFSS  FF0.4
006E:  GOTO   0078
0072:  BTFSC  FF0.1
0074:  GOTO   012C
0078:  MOVFF  0E,00
007C:  MOVFF  0F,01
0080:  MOVFF  10,02
0084:  MOVFF  11,03
0088:  MOVFF  0C,FE9
008C:  MOVFF  07,FEA
0090:  BSF    07.7
0092:  MOVFF  08,FE1
0096:  MOVFF  09,FE2
009A:  MOVFF  0A,FD9
009E:  MOVFF  0B,FDA
00A2:  MOVFF  12,FF3
00A6:  MOVFF  13,FF4
00AA:  MOVFF  14,FFA
00AE:  MOVFF  15,FF5
00B2:  MOVFF  16,FF6
00B6:  MOVFF  17,FF7
00BA:  MOVF   04,W
00BC:  MOVFF  06,FE0
00C0:  MOVFF  05,FD8
00C4:  RETFIE 0
.................... /* 
....................  * main.c 
....................  * 
....................  *  Created on: 03/02/2014 
....................  *      Author: cuki 
....................  */ 
.................... #include<18F452.h> 
.................... //////// Standard Header file for the PIC18F452 device //////////////// 
.................... #device PIC18F452 
.................... #list 
....................  
....................  
.................... #fuses H4 
....................  
.................... #use delay(crystal=8MHz, clock=32MHz) 
*
00C6:  CLRF   FEA
00C8:  MOVLW  20
00CA:  MOVWF  FE9
00CC:  MOVF   FEF,W
00CE:  BZ    00EA
00D0:  MOVLW  0A
00D2:  MOVWF  01
00D4:  CLRF   00
00D6:  DECFSZ 00,F
00D8:  BRA    00D6
00DA:  DECFSZ 01,F
00DC:  BRA    00D4
00DE:  MOVLW  5F
00E0:  MOVWF  00
00E2:  DECFSZ 00,F
00E4:  BRA    00E2
00E6:  DECFSZ FEF,F
00E8:  BRA    00D0
00EA:  RETURN 0
.................... #use rs232(xmit=PIN_C6, baud=9600, parity=N, bits=8, stop=1) 
*
0166:  BCF    F94.6
0168:  BCF    F8B.6
016A:  MOVLW  08
016C:  MOVWF  01
016E:  BRA    0170
0170:  NOP   
0172:  BSF    01.7
0174:  BRA    0192
0176:  BCF    01.7
0178:  RRCF   1F,F
017A:  BTFSC  FD8.0
017C:  BSF    F8B.6
017E:  BTFSS  FD8.0
0180:  BCF    F8B.6
0182:  BSF    01.6
0184:  BRA    0192
0186:  BCF    01.6
0188:  DECFSZ 01,F
018A:  BRA    0178
018C:  BRA    018E
018E:  NOP   
0190:  BSF    F8B.6
0192:  MOVLW  01
0194:  MOVWF  00
0196:  CLRF   FE9
0198:  DECFSZ FE9,F
019A:  BRA    0198
019C:  DECFSZ 00,F
019E:  BRA    0196
01A0:  MOVLW  0E
01A2:  MOVWF  FE9
01A4:  DECFSZ FE9,F
01A6:  BRA    01A4
01A8:  NOP   
01AA:  BTFSC  01.7
01AC:  BRA    0176
01AE:  BTFSC  01.6
01B0:  BRA    0186
01B2:  GOTO   01CA (RETURN)
....................  
.................... #define bto PIN_B0 
.................... #define tempo0 3035 
....................  
.................... int tempo = 500, cont = 1, estado_timer0 = 0; 
.................... short print = TRUE, on_off = TRUE, trigger; 
....................  
.................... #INT_EXT 
.................... void ext_isr() { 
.................... 	delay_ms(100); 
*
00EC:  MOVLW  64
00EE:  MOVWF  20
00F0:  RCALL  00C6
.................... 	clear_interrupt(INT_EXT); 
00F2:  BCF    FF2.1
.................... 	switch (estado_timer0++) { 
00F4:  MOVF   1B,W
00F6:  INCF   1B,F
00F8:  XORLW  00
00FA:  BZ    010A
00FC:  XORLW  01
00FE:  BZ    0110
0100:  XORLW  03
0102:  BZ    0116
0104:  XORLW  01
0106:  BZ    011C
0108:  BRA    0124
.................... 	case 0: 
.................... 		setup_timer_0(T0_INTERNAL | T0_DIV_64); 
010A:  MOVLW  85
010C:  MOVWF  FD5
.................... 		break; 
010E:  BRA    0126
.................... 	case 1: 
.................... 		setup_timer_0(T0_INTERNAL | T0_DIV_32); 
0110:  MOVLW  84
0112:  MOVWF  FD5
.................... 		break; 
0114:  BRA    0126
.................... 	case 2: 
.................... 		setup_timer_0(T0_INTERNAL | T0_DIV_16); 
0116:  MOVLW  83
0118:  MOVWF  FD5
.................... 		break; 
011A:  BRA    0126
.................... 	case 3: 
.................... 		setup_timer_0(T0_INTERNAL | T0_DIV_8); 
011C:  MOVLW  82
011E:  MOVWF  FD5
.................... 		estado_timer0 = 0; 
0120:  CLRF   1B
.................... 		break; 
0122:  BRA    0126
.................... 	default: 
.................... 		estado_timer0 = 0; 
0124:  CLRF   1B
.................... 	} 
.................... } 
....................  
0126:  BCF    FF2.1
0128:  GOTO   0078
.................... #INT_EXT2 
.................... void ext2_isr() { 
.................... 	clear_interrupt(INT_EXT2); 
012C:  BCF    FF0.1
.................... 	delay_ms(100); 
012E:  MOVLW  64
0130:  MOVWF  20
0132:  RCALL  00C6
.................... 	on_off = !on_off; 
0134:  BTG    1C.1
.................... 	trigger = TRUE; 
0136:  BSF    1C.2
.................... } 
....................  
0138:  BCF    FF0.1
013A:  GOTO   0078
.................... #INT_TIMER0 
.................... void isr_timer0() { 
.................... 	clear_interrupt(INT_TIMER0); 
013E:  BCF    FF2.2
.................... 	cont <<= 1; 
0140:  BCF    FD8.0
0142:  RLCF   1A,F
.................... 	if (cont == 0b1000) 
0144:  MOVF   1A,W
0146:  SUBLW  08
0148:  BNZ   014E
.................... 		cont = 1; 
014A:  MOVLW  01
014C:  MOVWF  1A
.................... 	output_c(cont); 
014E:  CLRF   F94
0150:  MOVFF  1A,F8B
.................... } 
....................  
0154:  BCF    FF2.2
0156:  GOTO   0078
.................... int main(void) { 
*
01D8:  CLRF   FF8
01DA:  BCF    FD0.7
01DC:  BSF    07.7
01DE:  CLRF   FEA
01E0:  CLRF   FE9
01E2:  BCF    F94.6
01E4:  BSF    F8B.6
01E6:  MOVLW  F4
01E8:  MOVWF  19
01EA:  MOVLW  01
01EC:  MOVWF  1A
01EE:  CLRF   1B
01F0:  BSF    1C.0
01F2:  BSF    1C.1
01F4:  BSF    FC1.0
01F6:  BSF    FC1.1
01F8:  BSF    FC1.2
01FA:  BCF    FC1.3
....................  
.................... 	output_c(0); 
01FC:  CLRF   F94
01FE:  CLRF   F8B
....................  
.................... 	setup_timer_0(T0_INTERNAL | T0_DIV_128); 
0200:  MOVLW  86
0202:  MOVWF  FD5
.................... 	set_timer0(tempo0); 
0204:  MOVLW  0B
0206:  MOVWF  FD7
0208:  MOVLW  DB
020A:  MOVWF  FD6
.................... 	clear_interrupt(INT_TIMER0); 
020C:  BCF    FF2.2
....................  
.................... 	enable_interrupts(INT_EXT_H2L); 
020E:  BSF    FF2.4
0210:  BCF    FF1.6
.................... 	enable_interrupts(INT_EXT2_H2L); 
0212:  BSF    FF0.4
0214:  BCF    FF1.4
.................... 	enable_interrupts(INT_TIMER0); 
0216:  BSF    FF2.5
.................... 	enable_interrupts(GLOBAL); 
0218:  MOVLW  C0
021A:  IORWF  FF2,F
....................  
.................... 	while (TRUE) { 
.................... 		if (on_off) { 
021C:  BTFSS  1C.1
021E:  BRA    023A
.................... 			if (trigger) { 
0220:  BTFSS  1C.2
0222:  BRA    0238
.................... 				trigger = FALSE; 
0224:  BCF    1C.2
.................... 				setup_timer_0(T0_INTERNAL | T0_DIV_128); 
0226:  MOVLW  86
0228:  MOVWF  FD5
.................... 				set_timer0(tempo0); 
022A:  MOVLW  0B
022C:  MOVWF  FD7
022E:  MOVLW  DB
0230:  MOVWF  FD6
.................... 				clear_interrupt(INT_TIMER0); 
0232:  BCF    FF2.2
.................... 				enable_interrupts(INT_TIMER0); 
0234:  BSF    FF2.5
.................... 				estado_timer0 = 0; 
0236:  CLRF   1B
.................... 			} 
.................... 		} else { 
0238:  BRA    0254
.................... 			if (trigger) { 
023A:  BTFSS  1C.2
023C:  BRA    0254
.................... 				trigger = FALSE; 
023E:  BCF    1C.2
.................... 				clear_interrupt(INT_TIMER0); 
0240:  BCF    FF2.2
.................... 				disable_interrupts(INT_TIMER0); 
0242:  BCF    FF2.5
.................... 				setup_timer_0(T0_OFF); 
0244:  CLRF   FD5
.................... 				printf("\fDesligado"); 
0246:  MOVLW  5A
0248:  MOVWF  FF6
024A:  MOVLW  01
024C:  MOVWF  FF7
024E:  BRA    01B6
.................... 				output_c(0); 
0250:  CLRF   F94
0252:  CLRF   F8B
.................... 			} 
.................... 		} 
.................... 	} 
0254:  BRA    021C
.................... 	return 0; 
0256:  MOVLW  00
0258:  MOVWF  01
.................... } 
025A:  SLEEP 

Configuration Fuses:
   Word  1: 2600   H4 NOOSCSEN
   Word  2: 0E0E   PUT BROWNOUT BORV20 NOWDT WDT128
   Word  3: 0100   CCP2C1
   Word  4: 0081   STVREN NOLVP NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB

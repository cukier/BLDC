CCS PCH C Compiler, Version 4.140, 31805               19-fev-14 16:30

               Filename:   D:\Eletronica\Projetos\BLDC\main.lst

               ROM used:   1562 bytes (5%)
                           Largest free fragment is 31202
               RAM used:   34 (2%) at main() level
                           61 (4%) worst case
               Stack:     4 worst case (2 in main + 2 for interrupts)

*
0000:  GOTO   0542
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  FF2.5
0056:  GOTO   0060
005A:  BTFSC  FF2.2
005C:  GOTO   010C
0060:  BTFSS  FF2.4
0062:  GOTO   006C
0066:  BTFSC  FF2.1
0068:  GOTO   00E0
006C:  MOVFF  0E,00
0070:  MOVFF  0F,01
0074:  MOVFF  10,02
0078:  MOVFF  11,03
007C:  MOVFF  0C,FE9
0080:  MOVFF  07,FEA
0084:  BSF    07.7
0086:  MOVFF  08,FE1
008A:  MOVFF  09,FE2
008E:  MOVFF  0A,FD9
0092:  MOVFF  0B,FDA
0096:  MOVFF  12,FF3
009A:  MOVFF  13,FF4
009E:  MOVFF  14,FFA
00A2:  MOVFF  15,FF5
00A6:  MOVFF  16,FF6
00AA:  MOVFF  17,FF7
00AE:  MOVF   04,W
00B0:  MOVFF  06,FE0
00B4:  MOVFF  05,FD8
00B8:  RETFIE 0
.................... /* 
....................  * main.c 
....................  * 
....................  *  Created on: 03/02/2014 
....................  *      Author: cuki 
....................  */ 
.................... #include<18F452.h> 
.................... //////// Standard Header file for the PIC18F452 device //////////////// 
.................... #device PIC18F452 
.................... #list 
....................  
....................  
.................... #fuses H4 
....................  
.................... #use delay(crystal=8MHz, clock=32MHz) 
*
00BA:  CLRF   FEA
00BC:  MOVLW  3C
00BE:  MOVWF  FE9
00C0:  MOVF   FEF,W
00C2:  BZ    00DE
00C4:  MOVLW  0A
00C6:  MOVWF  01
00C8:  CLRF   00
00CA:  DECFSZ 00,F
00CC:  BRA    00CA
00CE:  DECFSZ 01,F
00D0:  BRA    00C8
00D2:  MOVLW  5F
00D4:  MOVWF  00
00D6:  DECFSZ 00,F
00D8:  BRA    00D6
00DA:  DECFSZ FEF,F
00DC:  BRA    00C4
00DE:  RETURN 0
.................... #use rs232(xmit=PIN_C6, baud=9600) 
*
0140:  BCF    F94.6
0142:  BCF    F8B.6
0144:  MOVLW  08
0146:  MOVWF  01
0148:  BRA    014A
014A:  NOP   
014C:  BSF    01.7
014E:  BRA    016C
0150:  BCF    01.7
0152:  RRCF   2F,F
0154:  BTFSC  FD8.0
0156:  BSF    F8B.6
0158:  BTFSS  FD8.0
015A:  BCF    F8B.6
015C:  BSF    01.6
015E:  BRA    016C
0160:  BCF    01.6
0162:  DECFSZ 01,F
0164:  BRA    0152
0166:  BRA    0168
0168:  NOP   
016A:  BSF    F8B.6
016C:  MOVLW  01
016E:  MOVWF  00
0170:  CLRF   FE9
0172:  DECFSZ FE9,F
0174:  BRA    0172
0176:  DECFSZ 00,F
0178:  BRA    0170
017A:  MOVLW  0E
017C:  MOVWF  FE9
017E:  DECFSZ FE9,F
0180:  BRA    017E
0182:  NOP   
0184:  BTFSC  01.7
0186:  BRA    0150
0188:  BTFSC  01.6
018A:  BRA    0160
018C:  RETURN 0
....................  
.................... #define bto PIN_B0 
....................  
.................... int saida = 1; 
.................... long reg_timer0 = 15535; 
.................... short ctrl = TRUE; 
....................  
.................... #INT_EXT 
.................... void ext_isr() { 
.................... 	delay_ms(100); 
*
00E0:  MOVLW  64
00E2:  MOVWF  3C
00E4:  RCALL  00BA
.................... 	clear_interrupt(INT_EXT); 
00E6:  BCF    FF2.1
.................... 	reg_timer0 += 2500; 
00E8:  MOVLW  C4
00EA:  ADDWF  1B,F
00EC:  MOVLW  09
00EE:  ADDWFC 1C,F
.................... 	if (reg_timer0 == 60000) 
00F0:  MOVF   1B,W
00F2:  SUBLW  60
00F4:  BNZ   0104
00F6:  MOVF   1C,W
00F8:  SUBLW  EA
00FA:  BNZ   0104
.................... 		reg_timer0 = 15535; 
00FC:  MOVLW  3C
00FE:  MOVWF  1C
0100:  MOVLW  AF
0102:  MOVWF  1B
.................... 	ctrl = TRUE; 
0104:  BSF    1D.0
.................... } 
....................  
0106:  BCF    FF2.1
0108:  GOTO   006C
.................... #INT_TIMER0 
.................... void timer_isr() { 
.................... 	clear_interrupt(INT_TIMER0); 
010C:  BCF    FF2.2
.................... 	set_timer0(reg_timer0); 
010E:  MOVFF  1C,FD7
0112:  MOVFF  1B,FD6
.................... 	saida <<= 1; 
0116:  BCF    FD8.0
0118:  RLCF   1A,F
.................... 	if (saida == 8) 
011A:  MOVF   1A,W
011C:  SUBLW  08
011E:  BNZ   0124
.................... 		saida = 1; 
0120:  MOVLW  01
0122:  MOVWF  1A
.................... 	output_c(saida); 
0124:  CLRF   F94
0126:  MOVFF  1A,F8B
.................... } 
....................  
012A:  BCF    FF2.2
012C:  GOTO   006C
.................... int main(void) { 
*
0542:  CLRF   FF8
0544:  BCF    FD0.7
0546:  BSF    07.7
0548:  CLRF   FEA
054A:  CLRF   FE9
054C:  BCF    F94.6
054E:  BSF    F8B.6
0550:  MOVLW  01
0552:  MOVWF  1A
0554:  MOVLW  3C
0556:  MOVWF  1C
0558:  MOVLW  AF
055A:  MOVWF  1B
055C:  BSF    1D.0
055E:  BSF    FC1.0
0560:  BSF    FC1.1
0562:  BSF    FC1.2
0564:  BCF    FC1.3
....................  
.................... 	output_c(0); 
0566:  CLRF   F94
0568:  CLRF   F8B
....................  
.................... 	clear_interrupt(INT_EXT); 
056A:  BCF    FF2.1
.................... 	clear_interrupt(INT_TIMER0); 
056C:  BCF    FF2.2
.................... 	set_timer0(reg_timer0); 
056E:  MOVFF  1C,FD7
0572:  MOVFF  1B,FD6
.................... 	setup_timer_0(T0_DIV_16 | T0_INTERNAL); 
0576:  MOVLW  83
0578:  MOVWF  FD5
.................... 	enable_interrupts(INT_EXT | INT_TIMER0 | GLOBAL); 
057A:  MOVLW  F0
057C:  IORWF  FF2,F
....................  
.................... 	printf("\fHello"); 
057E:  MOVLW  30
0580:  MOVWF  FF6
0582:  MOVLW  01
0584:  MOVWF  FF7
0586:  BRA    018E
....................  
.................... 	while (TRUE) { 
.................... 		if (ctrl) { 
0588:  BTFSS  1D.0
058A:  BRA    0616
.................... 			ctrl = FALSE; 
058C:  BCF    1D.0
.................... 			printf("%c", 12); 
058E:  MOVLW  0C
0590:  MOVWF  2F
0592:  RCALL  0140
0594:  CLRF   19
0596:  BTFSC  FF2.7
0598:  BSF    19.7
059A:  BCF    FF2.7
.................... 			delay_ms(10); 
059C:  MOVLW  0A
059E:  MOVWF  3C
05A0:  RCALL  00BA
05A2:  BTFSC  19.7
05A4:  BSF    FF2.7
.................... 			printf("t: %.3f", (65535 - reg_timer0) * 0.000002); 
05A6:  MOVLW  FF
05A8:  BSF    FD8.0
05AA:  SUBFWB 1B,W
05AC:  MOVWF  1E
05AE:  MOVLW  FF
05B0:  SUBFWB 1C,W
05B2:  MOVWF  1F
05B4:  MOVWF  21
05B6:  MOVFF  1E,20
05BA:  BRA    01B0
05BC:  MOVFF  03,32
05C0:  MOVFF  02,31
05C4:  MOVFF  01,30
05C8:  MOVFF  00,2F
05CC:  MOVLW  BD
05CE:  MOVWF  36
05D0:  MOVLW  37
05D2:  MOVWF  35
05D4:  MOVLW  06
05D6:  MOVWF  34
05D8:  MOVLW  6C
05DA:  MOVWF  33
05DC:  RCALL  01E8
05DE:  MOVFF  00,1E
05E2:  MOVFF  01,1F
05E6:  MOVFF  02,20
05EA:  MOVFF  03,21
05EE:  MOVLW  38
05F0:  MOVWF  FF6
05F2:  MOVLW  01
05F4:  MOVWF  FF7
05F6:  MOVLW  03
05F8:  MOVWF  22
05FA:  BRA    02DA
05FC:  MOVLW  89
05FE:  MOVWF  FE9
0600:  MOVFF  21,25
0604:  MOVFF  20,24
0608:  MOVFF  1F,23
060C:  MOVFF  1E,22
0610:  MOVLW  03
0612:  MOVWF  26
0614:  BRA    03C8
.................... 		} 
.................... 	} 
0616:  BRA    0588
.................... 	return 0; 
0618:  MOVLW  00
061A:  MOVWF  01
.................... } 
061C:  SLEEP 

Configuration Fuses:
   Word  1: 2600   H4 NOOSCSEN
   Word  2: 0E0E   PUT BROWNOUT BORV20 NOWDT WDT128
   Word  3: 0100   CCP2C1
   Word  4: 0081   STVREN NOLVP NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB

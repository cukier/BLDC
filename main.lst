CCS PCH C Compiler, Version 4.140, 31805               19-fev-14 08:18

               Filename:   D:\Eletronica\Projetos\BLDC\main.lst

               ROM used:   688 bytes (2%)
                           Largest free fragment is 32076
               RAM used:   28 (2%) at main() level
                           37 (2%) worst case
               Stack:     3 worst case (2 in main + 1 for interrupts)

*
0000:  GOTO   0236
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  FF2.4
0056:  GOTO   0060
005A:  BTFSC  FF2.1
005C:  GOTO   00AE
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVFF  15,FF5
009A:  MOVFF  16,FF6
009E:  MOVFF  17,FF7
00A2:  MOVF   04,W
00A4:  MOVFF  06,FE0
00A8:  MOVFF  05,FD8
00AC:  RETFIE 0
.................... /* 
....................  * main.c 
....................  * 
....................  *  Created on: 03/02/2014 
....................  *      Author: cuki 
....................  */ 
.................... #include<18F452.h> 
.................... //////// Standard Header file for the PIC18F452 device //////////////// 
.................... #device PIC18F452 
.................... #list 
....................  
....................  
.................... #fuses H4 
....................  
.................... #use delay(crystal=8MHz, clock=32MHz) 
*
013A:  CLRF   FEA
013C:  MOVLW  1C
013E:  MOVWF  FE9
0140:  MOVF   FEF,W
0142:  BZ    015E
0144:  MOVLW  0A
0146:  MOVWF  01
0148:  CLRF   00
014A:  DECFSZ 00,F
014C:  BRA    014A
014E:  DECFSZ 01,F
0150:  BRA    0148
0152:  MOVLW  5F
0154:  MOVWF  00
0156:  DECFSZ 00,F
0158:  BRA    0156
015A:  DECFSZ FEF,F
015C:  BRA    0144
015E:  GOTO   026C (RETURN)
.................... #use rs232(xmit=PIN_C6, baud=9600) 
*
00CA:  BCF    F94.6
00CC:  BCF    F8B.6
00CE:  MOVLW  08
00D0:  MOVWF  01
00D2:  BRA    00D4
00D4:  NOP   
00D6:  BSF    01.7
00D8:  BRA    00F6
00DA:  BCF    01.7
00DC:  RRCF   22,F
00DE:  BTFSC  FD8.0
00E0:  BSF    F8B.6
00E2:  BTFSS  FD8.0
00E4:  BCF    F8B.6
00E6:  BSF    01.6
00E8:  BRA    00F6
00EA:  BCF    01.6
00EC:  DECFSZ 01,F
00EE:  BRA    00DC
00F0:  BRA    00F2
00F2:  NOP   
00F4:  BSF    F8B.6
00F6:  MOVLW  01
00F8:  MOVWF  00
00FA:  CLRF   FE9
00FC:  DECFSZ FE9,F
00FE:  BRA    00FC
0100:  DECFSZ 00,F
0102:  BRA    00FA
0104:  MOVLW  0E
0106:  MOVWF  FE9
0108:  DECFSZ FE9,F
010A:  BRA    0108
010C:  NOP   
010E:  BTFSC  01.7
0110:  BRA    00DA
0112:  BTFSC  01.6
0114:  BRA    00EA
0116:  RETURN 0
....................  
.................... #define bto PIN_B0 
.................... //#define A 17 
.................... //#define B 34 
.................... //#define C 12 
....................  
.................... int cont = 100; 
.................... short ctrl = FALSE; 
....................  
.................... enum estadoTypes { 
.................... 	A, B, C 
.................... } estados; 
....................  
.................... #INT_EXT 
.................... void ext_isr() { 
.................... 	clear_interrupt(INT_EXT); 
*
00AE:  BCF    FF2.1
.................... 	cont -= 10; 
00B0:  MOVLW  0A
00B2:  SUBWF  19,F
.................... 	if (!cont) 
00B4:  MOVF   19,F
00B6:  BNZ   00BC
.................... 		cont = 100; 
00B8:  MOVLW  64
00BA:  MOVWF  19
.................... 	ctrl = TRUE; 
00BC:  BSF    1A.0
.................... } 
....................  
00BE:  BCF    FF2.1
00C0:  GOTO   0060
.................... int main(void) { 
*
0236:  CLRF   FF8
0238:  BCF    FD0.7
023A:  BSF    07.7
023C:  CLRF   FEA
023E:  CLRF   FE9
0240:  BCF    F94.6
0242:  BSF    F8B.6
0244:  MOVLW  64
0246:  MOVWF  19
0248:  BCF    1A.0
024A:  BSF    FC1.0
024C:  BSF    FC1.1
024E:  BSF    FC1.2
0250:  BCF    FC1.3
....................  
.................... 	output_d(0); 
0252:  CLRF   F95
0254:  CLRF   F8C
....................  
.................... 	clear_interrupt(INT_EXT); 
0256:  BCF    FF2.1
.................... 	enable_interrupts(INT_EXT | GLOBAL); 
0258:  MOVLW  D0
025A:  IORWF  FF2,F
....................  
.................... 	printf("Hello"); 
025C:  MOVLW  C4
025E:  MOVWF  FF6
0260:  MOVLW  00
0262:  MOVWF  FF7
0264:  BRA    0118
....................  
.................... 	while (TRUE) { 
....................  
.................... 		delay_ms(cont); 
0266:  MOVFF  19,1C
026A:  BRA    013A
.................... 		switch (estados++) { 
026C:  MOVF   1B,W
026E:  INCF   1B,F
0270:  XORLW  00
0272:  BZ    027E
0274:  XORLW  01
0276:  BZ    0286
0278:  XORLW  03
027A:  BZ    028E
027C:  BRA    0296
.................... 		case A: 
.................... 			output_d(17); 
027E:  CLRF   F95
0280:  MOVLW  11
0282:  MOVWF  F8C
.................... 			break; 
0284:  BRA    0296
.................... 		case B: 
.................... 			output_d(34); 
0286:  CLRF   F95
0288:  MOVLW  22
028A:  MOVWF  F8C
.................... 			break; 
028C:  BRA    0296
.................... 		case C: 
.................... 			output_d(12); 
028E:  CLRF   F95
0290:  MOVLW  0C
0292:  MOVWF  F8C
.................... 			estados = A; 
0294:  CLRF   1B
.................... 			break; 
.................... 		default: 
.................... 		} 
.................... 		if (ctrl) { 
0296:  BTFSS  1A.0
0298:  BRA    02AC
.................... 			ctrl = FALSE; 
029A:  BCF    1A.0
.................... 			printf("\f%d", cont); 
029C:  MOVLW  0C
029E:  MOVWF  22
02A0:  RCALL  00CA
02A2:  MOVFF  19,1C
02A6:  MOVLW  18
02A8:  MOVWF  1D
02AA:  BRA    018A
.................... 		} 
.................... 	} 
02AC:  BRA    0266
.................... 	return 0; 
02AE:  MOVLW  00
02B0:  MOVWF  01
.................... } 
02B2:  SLEEP 

Configuration Fuses:
   Word  1: 2600   H4 NOOSCSEN
   Word  2: 0E0E   PUT BROWNOUT BORV20 NOWDT WDT128
   Word  3: 0100   CCP2C1
   Word  4: 0081   STVREN NOLVP NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
